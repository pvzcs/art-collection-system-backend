name: Build Cross-Platform Binaries

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    name: Build for ${{ matrix.os }}/${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          # Linux builds
          - os: linux
            arch: amd64
            runner: ubuntu-latest
            output_name: server-linux-amd64
          - os: linux
            arch: arm64
            runner: ubuntu-latest
            output_name: server-linux-arm64

          # Windows builds
          - os: windows
            arch: amd64
            runner: windows-latest
            output_name: server-windows-amd64.exe
          - os: windows
            arch: arm64
            runner: windows-latest
            output_name: server-windows-arm64.exe

          # macOS builds
          - os: darwin
            arch: arm64
            runner: macos-latest
            output_name: server-darwin-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.25.1"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies
        run: go mod download

      - name: Build binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          go build -v -o bin/${{ matrix.output_name }} ./cmd/server

      - name: Upload artifact (Linux)
        if: matrix.os == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output_name }}
          path: bin/${{ matrix.output_name }}
          retention-days: 30

      - name: Upload artifact (Windows)
        if: matrix.os == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output_name }}
          path: bin/${{ matrix.output_name }}
          retention-days: 30

      - name: Upload artifact (macOS)
        if: matrix.os == 'darwin'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output_name }}
          path: bin/${{ matrix.output_name }}
          retention-days: 30

  create-release:
    name: Create Release with Binaries
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-binaries

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release-binaries/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
